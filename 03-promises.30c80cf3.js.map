{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAKtC,SAASG,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IAbkBN,SAASC,cAAc,yBAE/Ba,iBAAiB,SAgBlC,SAAyBC,GAEvBA,EAAEC,iBACF,IAAIC,EAAaC,OAAOnB,EAAMoB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OAExBE,EAAaH,OAAOf,EAAOgB,OAC/BnB,SAASsB,uBAAuB,QAAQ,GAAGC,QAE3C,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAYG,IAC9BpB,EAAc,EAAIoB,EAAGP,EAAaO,EAAIJ,GACnCK,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALb,MACjBe,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAN,G,IAAGrB,EAAQqB,EAARrB,SAAU4B,EAAKP,EAALb,MAClBe,EAAA/B,GAASgC,OAAOK,QAAQ,sBAAqCH,OAAf1B,EAAS,QAAY0B,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\nbtnCreatePromise.addEventListener('click', onCreatePromise);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n  \nfunction onCreatePromise(e) {\n\n  e.preventDefault();\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n\n  let loopAmount = Number(amount.value);\n  document.getElementsByClassName(\"form\")[0].reset();\n\n  for (let i = 0; i < loopAmount; i++)  {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }  \n};\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","loopAmount","getElementsByClassName","reset","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.30c80cf3.js.map"}